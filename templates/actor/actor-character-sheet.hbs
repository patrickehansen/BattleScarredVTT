<form class="{{cssClass}} {{actor.type}} flexcol" autocomplete="off">

  {{!-- Sheet Header --}}
  <header class="sheet-header">
    <img class="profile-img" src="{{actor.img}}" data-edit="img" title="{{actor.name}}" height="100" width="100"/>
    <div class="header-fields">
      <div class="topHeader">
        <div class="labeledInput">
          <label>Name:</label><input name="name" type="text" value="{{actor.name}}" placeholder="Name"/>
        </div>
        
        <div class="labeledInput">
          <label>Background:</label><input name="system.biography" type="text" value="{{system.biography}}" placeholder="Background"/>
        </div>
      </div>
      <div class="topHeader">
        <div class="labeledInput">
          <label>Deity:</label><input name="system.deity" type="text" value="{{system.deity}}" placeholder="Deity"/>
        </div>
        <div class="labeledInput">
          <label>Deity's Gift:</label><input name="system.deityGift" type="text" value="{{system.deityGift}}" placeholder="Deity's Gift"/>
        </div>
      </div>
      
      {{!-- The grid classes are defined in scss/global/_grid.scss. To use,
      use both the "grid" and "grid-Ncol" class where "N" can be any number
      from 1 to 12 and will create that number of columns.  --}}
      <div class="resources grid grid-3col">

        {{!-- "flex-group-center" is also defined in the _grid.scss file
        and it will add a small amount of padding, a border, and will
        center all of its child elements content and text. --}}
        <div class="health-resource resource-container resource flex-group-center">
          <label for="system.health.value" class="resource-label">Health</label>
          <div class="resource-content flexrow flex-center flex-between">
          <input type="text" name="system.health.value" value="{{system.health.value}}" data-dtype="Number"/>
          <span> / </span>
          <input type="text" name="system.health.max" value="{{system.health.max}}" data-dtype="Number"/>
          </div>
        </div>

        <div class="aether-resource resource-container resource flex-group-center">
          <label for="system.aether.value" class="resource-label">Aether Pool</label>
          <div class="resource-content flexrow flex-center flex-between">
          <input type="text" name="system.aether.value" value="{{system.aether.value}}" data-dtype="Number"/>
          <span> / </span>
          <input type="text" name="system.aether.max" value="{{system.aether.max}}" data-dtype="Number"/>
          </div>
        </div>

        <div class="action-resource resource-container resource flex-group-center">
          <label for="system.action.value" class="resource-label">Action Points</label>
          <div class="resource-content flexrow flex-center flex-between">
          <input type="text" name="system.action.value" value="{{system.action.value}}" data-dtype="Number"/>
          <span> / </span>
          <input type="text" name="system.action.max" value="{{system.action.max}}" data-dtype="Number"/>
          </div>
        </div>

      </div>
    </div>
  </header>

  {{!-- Sheet Tab Navigation --}}
  <nav class="sheet-tabs tabs" data-group="primary">
    {{!-- Default tab is specified in actor-sheet.mjs --}}
    <a class="item" data-tab="features">Features</a>
    <a class="item" data-tab="description">Description</a>
    <a class="item" data-tab="items">Items</a>
    <a class="item" data-tab="spells">Spells</a>
    <a class="item" data-tab="effects">Effects</a>
  </nav>

  {{!-- Sheet Body --}}
  <section class="sheet-body">

    {{!-- Owned Features Tab --}}
    <div class="tab features" data-group="primary" data-tab="features">
      <section class="">
        {{!-- The grid classes are defined in scss/global/_grid.scss. To use,
        use both the "grid" and "grid-Ncol" class where "N" can be any number
        from 1 to 12 and will create that number of columns.  --}}
        <div class="abilities flexcol">
          {{#each abilities as |child key|}}
            <div class="abilityGroup">
              {{#each child.list as |ability key|}}
                {{> "systems/BattleScarredVTT/templates/actor/parts/ability.hbs" ability=ability key=key}}
              {{/each}}
              {{> "systems/BattleScarredVTT/templates/actor/parts/abilitySum.hbs" sum=child.sum}}
            </div>
          {{/each}}
        </div>
      </section>
    </div>

    {{!-- Biography Tab --}}
    <div class="tab biography" data-group="primary" data-tab="description">
      {{!-- If you want TinyMCE editors to output inline rolls when rendered, you need to pass the actor's roll data to the rollData property. --}}
      {{editor biography target="system.biography" rollData=rollData button=true owner=owner editable=editable}}
    </div>

    {{!-- Owned Items Tab --}}
    <div class="tab items" data-group="primary" data-tab="items">
       {{> "systems/BattleScarredVTT/templates/actor/parts/actor-items.hbs"}}
    </div>

    {{!-- Owned Spells Tab --}}
    <div class="tab spells" data-group="primary" data-tab="spells">
      {{> "systems/BattleScarredVTT/templates/actor/parts/actor-spells.hbs"}}
    </div>

    {{!-- Active Effects Tab --}}
    <div class="tab effects flexcol" data-group="primary" data-tab="effects">
      {{> "systems/BattleScarredVTT/templates/actor/parts/actor-effects.hbs"}}
    </div>

  </section>
</form>

