{"version":3,"file":"BattleScarredVTT.mjs","sources":["../module/documents/actor.mjs","../module/documents/item.mjs","../module/documents/items/weapon.mjs","../module/helpers/effects.mjs","../node_modules/tslib/tslib.es6.js","../node_modules/lower-case/dist.es2015/index.js","../node_modules/no-case/dist.es2015/index.js","../node_modules/pascal-case/dist.es2015/index.js","../node_modules/upper-case-first/dist.es2015/index.js","../node_modules/capital-case/dist.es2015/index.js","../module/helpers/utils.mjs","../module/sheets/actor-sheet.mjs","../module/sheets/item-sheet.mjs","../module/sheets/items/weapon-sheet.mjs","../module/helpers/templates.mjs","../module/helpers/config.mjs","../module/handlebars.mjs","../module/dataModels/character.mjs","../module/BattleScarredVTT.mjs"],"sourcesContent":["/**\n * Extend the base Actor document by defining a custom roll data structure which is ideal for the Simple system.\n * @extends {Actor}\n */\nexport class BattleScarredActor extends Actor {\n\n  /** @override */\n  prepareData() {\n    // Prepare data for the actor. Calling the super version of this executes\n    // the following, in order: data reset (to clear active effects),\n    // prepareBaseData(), prepareEmbeddedDocuments() (including active effects),\n    // prepareDerivedData().\n    super.prepareData();\n  }\n\n  /** @override */\n  prepareBaseData() {\n    // Data modifications in this step occur before processing embedded\n    // documents or derived data.\n  }\n\n  /**\n   * @override\n   * Augment the basic actor data with additional dynamic data. Typically,\n   * you'll want to handle most of your calculated/derived data in this step.\n   * Data calculated in this step should generally not exist in template.json\n   * (such as ability modifiers rather than ability scores) and should be\n   * available both inside and outside of character sheets (such as if an actor\n   * is queried and has a roll executed directly from it).\n   */\n  prepareDerivedData() {\n    const actorData = this;\n    const data = actorData.system;\n    const flags = actorData.flags.battleScarredVTT || {};\n\n    // Make separate methods for each Actor type (character, npc, etc.) to keep\n    // things organized.\n    this._prepareCharacterData(actorData);\n    this._prepareNpcData(actorData);\n  }\n\n  /**\n   * Prepare Character type specific data\n   */\n  _prepareCharacterData(actorData) {\n    if (actorData.type !== 'character') return;\n\n    // Make modifications to data here. For example:\n    const data = actorData.system;\n\n    // Loop through ability scores, and add their modifiers to our sheet output.\n    for (let [key, ability] of Object.entries(data.abilities)) {\n      ability.mod = Math.ceil(ability.value);\n    }\n\n    // Calculate max health and aether.\n    data.health.max = data.abilities[data.health.complement].mod * data.health.multiplier;\n    data.aether.max = data.abilities[data.aether.complement].mod * data.aether.multiplier;\n    // For now, we have a hard cap at 30. Maybe there will be affects later.\n    data.action.max = 30;\n\n    this._prepareArmorData(actorData);\n    this._prepareEncumbranceData(actorData);\n    this._prepareSpellData(actorData);\n  }\n\n  _prepareArmorData(actorData) {\n    // Iterate over armor items and figure out mitigation and health\n    actorData.system.armorMitigation = 0;\n    actorData.system.armorHealth = {\n      value : 100,\n      max : 100,\n    }\n  }\n\n  // STR*5+END*5 = Equip Weight\n  _prepareEncumbranceData(actorData) {\n    const { str, end } = actorData.system.abilities;\n    actorData.system.carry = str.mod * 5 + end.mod * 5;\n\n    // sum up all carried item weight and divide it by carry\n    actorData.system.carriedWeight = 0;\n    actorData.system.encumbrance = this._encumbrance(actorData.system.carriedWeight, actorData.system.carry);\n    actorData.system.lift = this._lift(str.mod);\n  }\n\n  _prepareSpellData(actorData) {\n    actorData.system.codexSlots.value = 0;\n  }\n  /**\n   * Prepare NPC type specific data.\n   */\n  _prepareNpcData(actorData) {\n    if (actorData.type !== 'npc') return;\n  }\n\n  /**\n   * Override getRollData() that's supplied to rolls.\n   */\n  getRollData() {\n    const data = super.getRollData();\n\n    // Prepare character roll data.\n    this._getCharacterRollData(data);\n    this._getNpcRollData(data);\n\n    return data;\n  }\n\n  /**\n   * Prepare character roll data.\n   */\n  _getCharacterRollData(data) {\n    if (this.system.type !== 'character') return;\n\n    // Copy the ability scores to the top level, so that rolls can use\n    // formulas like `@str.mod + 4`.\n    if (data.abilities) {\n      for (let [k, v] of Object.entries(data.abilities)) {\n        data[k] = foundry.utils.deepClone(v);\n      }\n    }\n  }\n\n  /**\n   * Prepare NPC roll data.\n   */\n  _getNpcRollData(data) {\n    if (this.system.type !== 'npc') return;\n\n    // Process additional NPC data here.\n  }\n\n  // Light 0-25%\n  // Med 26-60%\n  // Hev 61-80%\n  // Enc 81-100%\n  // Fuc 101%+\n  _encumbrance(carried, maxCarry) {\n    const percentage = (carried / maxCarry) * 100;\n\n    if (percentage === 0) return 'None';\n    if (percentage <= 26) return 'Light';\n    if (percentage <= 61) return 'Medium';\n    if (percentage <= 81) return 'Heavy';\n    if (percentage <= 100) return 'Encumbered';\n    return 'Fuuuuucked';\n  }\n\n  _lift(str) {  \n    const strength = typeof str === 'number' ? str : Number(str);\n    const basic = strength * 8.1 * Math.pow(1.1, strength);\n\n    // Ceiling to nearest 20\n    return roundToNearestXWithOffset(basic, 20, 0);\n  }\n}\n\nfunction roundToNearestXWithOffset(number, increment, offset = 0) {\n  return Math.ceil((number - offset) / increment ) * increment + offset;\n}\n","/**\r\n * Extend the basic Item with some very simple modifications.\r\n * @extends {Item}\r\n */\r\nexport class BattleScarredItem extends Item {\r\n  /**\r\n   * Augment the basic Item data model with additional dynamic data.\r\n   */\r\n  prepareData() {\r\n    // As with the actor class, items are documents that can have their data\r\n    // preparation methods overridden (such as prepareBaseData()).\r\n    super.prepareData();\r\n  }\r\n\r\n  getRollContext() {\r\n    const item = this;\r\n\r\n    // Initialize chat data.\r\n    const speaker = ChatMessage.getSpeaker({ actor: this.actor });\r\n    const rollMode = game.settings.get('core', 'rollMode');\r\n    const defaultLabel = `[${item.type}] ${item.name}`;\r\n\r\n    return {\r\n      speaker,\r\n      rollMode,\r\n      defaultLabel,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle clickable rolls.\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  async roll() {\r\n    const item = this;\r\n\r\n    // Initialize chat data.\r\n    const { speaker, rollMode, defaultLabel } = this.getRollContext();\r\n\r\n    // If there's no roll data, send a chat message.\r\n    if (!this.system.formula) {\r\n      ChatMessage.create({\r\n        speaker: speaker,\r\n        rollMode: rollMode,\r\n        flavor: defaultLabel,\r\n        content: item.system.description ?? ''\r\n      });\r\n    }\r\n    // Otherwise, create a roll and send a chat message from it.\r\n    else {\r\n      // Retrieve roll data.\r\n      const rollData = this.getRollData();\r\n      const rolls = new Roll(rollData.item.formula, rollData);\r\n\r\n      // If you need to store the value first, uncomment the next line.\r\n      // let result = await roll.roll({async: true});\r\n\r\n      roll.toMessage({\r\n        speaker: speaker,\r\n        rollMode: rollMode,\r\n        flavor: label ?? defaultLabel,\r\n      });\r\n\r\n      \r\n      return rolls;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prepare a data object which is passed to any Roll formulas which are created related to this Item\r\n   * @private\r\n   */\r\n  getRollData() {\r\n    // If present, return the actor's roll data.\r\n    if ( !this.actor ) return null;\r\n    const rollData = this.actor.getRollData();\r\n    \r\n    Object.assign(rollData, rollData.abilities);\r\n    rollData.item = foundry.utils.deepClone(this.system);\r\n    \r\n    return rollData;\r\n  }\r\n}\r\n","import { BattleScarredItem } from \"../item.mjs\";\r\n\r\nexport class BattleScarredWeapon extends BattleScarredItem {\r\n\r\n  /**\r\n   * Handle clickable rolls.\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  async roll() {\r\n    const rollCoontext = super.getRollContext();\r\n    const {defaultLabel} = rollCoontext;\r\n\r\n    // Retrieve roll data.\r\n    const rollData = this.getRollData();\r\n    const rolls = [\r\n      {\r\n        roll: new Roll('3d6 - @hitStat', rollData),\r\n        label: `${defaultLabel} attack`,\r\n      },\r\n      {\r\n        roll: new Roll('@dice + @bonus', rollData),\r\n        label: `${defaultLabel} damage`,\r\n      }\r\n    ];\r\n\r\n    // If you need to store the value first, uncomment the next line.\r\n    // let result = await roll.roll({async: true});\r\n    rolls.forEach(({roll, label}) => {\r\n      roll.toMessage({\r\n        speaker: rollCoontext.speaker,\r\n        rollMode: rollCoontext.rollMode,\r\n        flavor: label ?? defaultLabel,\r\n      });\r\n    })\r\n    \r\n    return rolls;\r\n  }\r\n\r\n  /**\r\n   * Prepare a data object which is passed to any Roll formulas which are created related to this Item\r\n   * @private\r\n   */\r\n  getRollData() {\r\n    const rollData = super.getRollData();\r\n\r\n    const { dice, bonus } = rollData?.item?.system.damage;\r\n    const equippedMode = rollData?.item?.system.equippedMode;\r\n\r\n    // We probably need to optional chain this up\r\n    const damageStat = rollData.abilities[rollData.item.system.dmgStat].mod;\r\n\r\n    // TODO:: refactor this architecture\r\n    const multiplier = equippedMode === 'twoHand' ? 2 : 1;\r\n\r\n    return {\r\n      // Value of stat used for hitting success evaluation\r\n      hitStat: rollData.abilities[rollData.item.system.damage.hitStat].mod,\r\n\r\n      // Damage assessment\r\n      dice: dice,\r\n      bonus: bonus + (damageStat * multiplier),\r\n    }\r\n  }\r\n}\r\n","/**\n * Manage Active Effect instances through the Actor Sheet via effect control buttons.\n * @param {MouseEvent} event      The left-click event on the effect control\n * @param {Actor|Item} owner      The owning document which manages this effect\n */\n export function onManageActiveEffect(event, owner) {\n  event.preventDefault();\n  const a = event.currentTarget;\n  const li = a.closest(\"li\");\n\n  const effect = li.dataset.effectId ? owner.effects.get(li.dataset.effectId) : null;\n  switch ( a.dataset.action ) {\n    case \"create\":\n      return owner.createEmbeddedDocuments(\"ActiveEffect\", [{\n        label: \"New Effect\",\n        icon: \"icons/svg/aura.svg\",\n        origin: owner.uuid,\n        \"duration.rounds\": li.dataset.effectType === \"temporary\" ? 1 : undefined,\n        disabled: li.dataset.effectType === \"inactive\"\n      }]);\n    case \"edit\":\n      return effect.sheet.render(true);\n    case \"delete\":\n      return effect.delete();\n    case \"toggle\":\n      return effect.update({disabled: !effect.data.disabled});\n  }\n}\n\n/**\n * Prepare the data structure for Active Effects which are currently applied to an Actor or Item.\n * @param {ActiveEffect[]} effects    The array of Active Effect instances to prepare sheet data for\n * @return {object}                   Data for rendering\n */\nexport function prepareActiveEffectCategories(effects) {\n\n    // Define effect header categories\n    const categories = {\n      temporary: {\n        type: \"temporary\",\n        label: \"Temporary Effects\",\n        effects: []\n      },\n      passive: {\n        type: \"passive\",\n        label: \"Passive Effects\",\n        effects: []\n      },\n      inactive: {\n        type: \"inactive\",\n        label: \"Inactive Effects\",\n        effects: []\n      }\n    };\n\n    // Iterate over active effects, classifying them into categories\n    for ( let e of effects ) {\n      e._getSourceName(); // Trigger a lookup for the source name\n      if ( e.data.disabled ) categories.inactive.effects.push(e);\n      else if ( e.isTemporary ) categories.temporary.effects.push(e);\n      else categories.passive.effects.push(e);\n    }\n    return categories;\n}","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport default {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __createBinding,\r\n    __exportStar,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n};\r\n","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\",\n        },\n    },\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n//# sourceMappingURL=index.js.map","import { lowerCase } from \"lower-case\";\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function pascalCaseTransform(input, index) {\n    var firstChar = input.charAt(0);\n    var lowerChars = input.substr(1).toLowerCase();\n    if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n        return \"_\" + firstChar + lowerChars;\n    }\n    return \"\" + firstChar.toUpperCase() + lowerChars;\n}\nexport function pascalCaseTransformMerge(input) {\n    return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\nexport function pascalCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \"\", transform: pascalCaseTransform }, options));\n}\n//# sourceMappingURL=index.js.map","/**\n * Upper case the first character of an input string.\n */\nexport function upperCaseFirst(input) {\n    return input.charAt(0).toUpperCase() + input.substr(1);\n}\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\nexport function capitalCaseTransform(input) {\n    return upperCaseFirst(input.toLowerCase());\n}\nexport function capitalCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \" \", transform: capitalCaseTransform }, options));\n}\n//# sourceMappingURL=index.js.map","import { capitalCase } from 'change-case';\r\n\r\n/**\r\n * Format actor resources for display on the sheet\r\n * @param {string} resourceName name of the resource to be formatted\r\n * @param {GameSystemProperties} system object on the actor for the system\r\n * @returns Maybe<FormattedResource>\r\n */\r\nexport function formatResourceForSheet(resourceName, system) {\r\n  const fetched = system[resourceName];\r\n\r\n  return {\r\n    className: `${resourceName}-resource resource-container resource flex-group-center`,\r\n    value: fetched?.value !== undefined ? fetched.value : fetched,\r\n    max: fetched?.max ?? undefined,\r\n    label: capitalCase(resourceName),\r\n    valuePath: `system.${resourceName}${fetched?.value !== undefined ? '.value' : ''}`,\r\n    maxPath: `system.${resourceName}.max`,\r\n    type: resourceName === 'Mulligan' ? \"Text\" : \"Number\"\r\n  }\r\n}\r\n","import {onManageActiveEffect, prepareActiveEffectCategories} from \"../helpers/effects.mjs\";\r\nimport { formatResourceForSheet } from '../helpers/utils.mjs';\r\nimport { pascalCase } from \"change-case\";\r\n\r\n/**\r\n * Extend the basic ActorSheet with some very simple modifications\r\n * @extends {ActorSheet}\r\n */\r\nexport class BattleScarredActorSheet extends ActorSheet {\r\n\r\n  /** @override */\r\n  static get defaultOptions() {\r\n    console.log('hey this is the default options', super.defaultOptions)\r\n    return mergeObject(super.defaultOptions, {\r\n      classes: [\"BattleScarredVTT\", \"sheet\", \"actor\"],\r\n      template: \"systems/BattleScarredVTT/templates/actor/actor-sheet.hbs\",\r\n      width: 750,\r\n      top: 200,\r\n      left: 350,\r\n      height: 800,\r\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"features\" }]\r\n    });\r\n  }\r\n\r\n  /** @override */\r\n  get template() {\r\n    return `systems/BattleScarredVTT/templates/actor/actor-${this.actor.type}-sheet.hbs`;\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  async getData() {\r\n    // Retrieve the data structure from the base sheet. You can inspect or log\r\n    // the context variable to see the structure, but some key properties for\r\n    // sheets are the actor object, the data object, whether or not it's\r\n    // editable, the items array, and the effects array.\r\n    const context = super.getData();\r\n\r\n    // Use a safe clone of the actor data for further operations.\r\n    const actorData = this.actor.toObject(false);\r\n\r\n    // Add the actor's data to context.data for easier access, as well as flags.\r\n    context.system = actorData.system;\r\n    context.flags = actorData.flags;\r\n\r\n    // Prepare character data and items.\r\n    this[`_get${pascalCase(actorData.type)}Data`]?.(context);\r\n    // if (actorData.type == 'character') {\r\n    //   this._prepareItems(context);\r\n    //   this._prepareCharacterData(context);\r\n    // }\r\n\r\n    // // Prepare NPC data and items.\r\n    // if (actorData.type == 'npc') {\r\n    //   this._prepareItems(context);\r\n    // }\r\n\r\n    // Add roll data for TinyMCE editors.\r\n    context.rollData = context.actor.getRollData();\r\n\r\n    // Prepare active effects\r\n    context.effects = prepareActiveEffectCategories(this.actor.effects);\r\n\r\n    context.biography = await TextEditor.enrichHTML(actorData.system.biography, {async: true});\r\n    context.isGM = game.users.current.isGM;\r\n\r\n    console.log('hey so this is a context', context);\r\n\r\n    return context;\r\n  }\r\n\r\n  _getCharacterData(context) {\r\n    this._prepareItems(context);\r\n    this._prepareCharacterData(context);\r\n  }\r\n\r\n  _getNpcData(context) {\r\n    this._prepareItems(context);\r\n  }\r\n\r\n  /**\r\n   * Organize and classify Items for Character sheets.\r\n   *\r\n   * @param {Object} actorData The actor to prepare.\r\n   *\r\n   * @return {undefined}\r\n   */\r\n  _prepareCharacterData(context) {\r\n    // Handle ability scores.\r\n    for (let [k, v] of Object.entries(context.system.abilities)) {\r\n      v.label = game.i18n.localize(CONFIG.BATTLESCARREDVTT.abilities.names[k]) ?? k;\r\n    }\r\n\r\n    // Split abilities by type for display purposes\r\n    context.abilities = Object.entries(context.system.abilities).reduce((a, [short, ability]) => {\r\n      if (!ability.type) return a;\r\n      if (a[ability.type]) {\r\n        a[ability.type].list[short] = ability;\r\n        a[ability.type].sum += ability.value;\r\n      } else {\r\n        a[ability.type] = {\r\n          list: {\r\n            [short]: ability\r\n          },\r\n          sum: ability.value,\r\n        }\r\n      } \r\n      return a;\r\n    }, {});\r\n\r\n    context.resources = ['health', 'aether', 'action'].map((resource) => formatResourceForSheet(resource, context.system));\r\n\r\n    context.status = [\r\n      ['injuries', 'permanentInjuries', 'codexSlots'],\r\n      ['xp', 'money'],\r\n      ['armorMitigation', 'armorHealth', 'encumbrance'],\r\n      ['mulligan', 'carry', 'lift'],\r\n    ].map(arr => arr.map(\r\n      (resource) => formatResourceForSheet(resource, context.system)\r\n    ))\r\n  }\r\n\r\n  /**\r\n   * Organize and classify Items for Character sheets.\r\n   *\r\n   * @param {Object} actorData The actor to prepare.\r\n   *\r\n   * @return {undefined}\r\n   */\r\n  _prepareItems(context) {\r\n    // Initialize containers.\r\n    const gear = [];\r\n    const features = [];\r\n    const spells = {\r\n      0: [],\r\n      1: [],\r\n      2: [],\r\n      3: [],\r\n      4: [],\r\n      5: [],\r\n      6: [],\r\n      7: [],\r\n      8: [],\r\n      9: []\r\n    };\r\n\r\n    // Iterate through items, allocating to containers\r\n    for (let i of context.items) {\r\n      i.img = i.img || DEFAULT_TOKEN;\r\n      // Append to gear.\r\n      if (i.type === 'item') {\r\n        gear.push(i);\r\n      }\r\n      // Append to features.\r\n      else if (i.type === 'feature') {\r\n        features.push(i);\r\n      }\r\n      // Append to spells.\r\n      else if (i.type === 'spell') {\r\n        if (i.spellLevel != undefined) {\r\n          spells[i.spellLevel].push(i);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Assign and return\r\n    context.gear = gear;\r\n    context.features = features;\r\n    context.spells = spells;\r\n   }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n\r\n    // Render the item sheet for viewing/editing prior to the editable check.\r\n    html.find('.item-edit').click(ev => {\r\n      const li = $(ev.currentTarget).parents(\".item\");\r\n      const item = this.actor.items.get(li.data(\"itemId\"));\r\n      item.sheet.render(true);\r\n    });\r\n\r\n    // -------------------------------------------------------------\r\n    // Everything below here is only needed if the sheet is editable\r\n    if (!this.isEditable) return;\r\n\r\n    // Add Inventory Item\r\n    html.find('.item-create').click(this._onItemCreate.bind(this));\r\n\r\n    // Delete Inventory Item\r\n    html.find('.item-delete').click(ev => {\r\n      const li = $(ev.currentTarget).parents(\".item\");\r\n      const item = this.actor.items.get(li.data(\"itemId\"));\r\n      item.delete();\r\n      li.slideUp(200, () => this.render(false));\r\n    });\r\n\r\n    // Active Effect management\r\n    html.find(\".effect-control\").click(ev => onManageActiveEffect(ev, this.actor));\r\n\r\n    // Rollable abilities.\r\n    html.find('.rollable').click(this._onRoll.bind(this));\r\n\r\n    // Drag events for macros.\r\n    if (this.actor.owner) {\r\n      let handler = ev => this._onDragStart(ev);\r\n      html.find('li.item').each((i, li) => {\r\n        if (li.classList.contains(\"inventory-header\")) return;\r\n        li.setAttribute(\"draggable\", true);\r\n        li.addEventListener(\"dragstart\", handler, false);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle creating a new Owned Item for the actor using initial data defined in the HTML dataset\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  async _onItemCreate(event) {\r\n    event.preventDefault();\r\n    const header = event.currentTarget;\r\n    // Get the type of item to create.\r\n    const type = header.dataset.type;\r\n    // Grab any data associated with this control.\r\n    const data = duplicate(header.dataset);\r\n    // Initialize a default name.\r\n    const name = `New ${type.capitalize()}`;\r\n    // Prepare the item object.\r\n    const itemData = {\r\n      name: name,\r\n      type: type,\r\n      data: data\r\n    };\r\n    // Remove the type from the dataset since it's in the itemData.type prop.\r\n    delete itemData.data[\"type\"];\r\n\r\n    // Finally, create the item!\r\n    return await Item.create(itemData, {parent: this.actor});\r\n  }\r\n\r\n  /**\r\n   * Handle clickable rolls.\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  _onRoll(event) {\r\n    event.preventDefault();\r\n    const element = event.currentTarget;\r\n    const dataset = element.dataset;\r\n\r\n    // Handle item rolls.\r\n    if (dataset.rollType) {\r\n      if (dataset.rollType == 'item') {\r\n        const itemId = element.closest('.item').dataset.itemId;\r\n        const item = this.actor.items.get(itemId);\r\n        if (item) return item.roll();\r\n      }\r\n    }\r\n\r\n    // Handle rolls that supply the formula directly.\r\n    if (dataset.roll) {\r\n      let label = dataset.label ? `[roll] ${dataset.label}` : '';\r\n      let roll = new Roll(dataset.roll, this.actor.getRollData());\r\n      roll.toMessage({\r\n        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\r\n        flavor: label,\r\n        rollMode: game.settings.get('core', 'rollMode'),\r\n      });\r\n      return roll;\r\n    }\r\n  }\r\n\r\n}\r\n","import { capitalCase, pascalCase } from 'change-case';\r\n\r\n/**\r\n * Extend the basic ItemSheet with some very simple modifications\r\n * @extends {ItemSheet}\r\n */\r\nexport class BattleScarredItemSheet extends ItemSheet {\r\n\r\n  /** @override */\r\n  static get defaultOptions() {\r\n    return mergeObject(super.defaultOptions, {\r\n      classes: [\"BattleScarredVTT\", \"sheet\", \"item\"],\r\n      width: 520,\r\n      height: 520,\r\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"attributes\" }]\r\n    });\r\n  }\r\n\r\n  /** @override */\r\n  get template() {\r\n    const path = \"systems/BattleScarredVTT/templates/item\";\r\n    // Return a single sheet for all item types.\r\n    // return `${path}/item-sheet.html`;\r\n\r\n    // Alternatively, you could use the following return statement to do a\r\n    // unique item sheet by type, like `weapon-sheet.html`.\r\n    return `${path}/item-${this.item.type}-sheet.hbs`;\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  async getData() {\r\n    // Retrieve base data structure.\r\n    const context = super.getData();\r\n\r\n    // Use a safe clone of the item data for further operations.\r\n    const itemData = foundry.utils.deepClone(this.item);\r\n\r\n    // Retrieve the roll data for TinyMCE editors.\r\n    context.rollData = {};\r\n    let actor = this.object?.parent ?? null;\r\n    if (actor) {\r\n      context.rollData = actor.getRollData();\r\n    }\r\n\r\n    // Add the actor's data to context.system for easier access, as well as flags.\r\n    context.system = foundry.utils.deepClone(itemData.system);\r\n    context.flags = itemData.flags;\r\n\r\n    if (itemData.system.description) {\r\n      context.description = await TextEditor.enrichHTML(itemData.system.description, { async: true });\r\n    }\r\n\r\n    return context;\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n  /** @override */\r\n  activateListeners(html) {\r\n    //super.activateListeners(html);\r\n    html.find('.rollable').click(this._onRoll.bind(this));\r\n\r\n    // Everything below here is only needed if the sheet is editable\r\n    if (!this.isEditable) return;\r\n  }\r\n}\r\n","import { capitalCase } from 'change-case';\r\nimport { BattleScarredItemSheet } from '../item-sheet.mjs';\r\n\r\n/**\r\n * Extend the basic ItemSheet with some very simple modifications\r\n * @extends {ItemSheet}\r\n */\r\nexport class BattleScarredWeaponSheet extends BattleScarredItemSheet {\r\n\r\n  /** @override */\r\n  static get defaultOptions() {\r\n    return mergeObject(super.defaultOptions, {\r\n      classes: [\"BattleScarredVTT\", \"sheet\", \"item\"],\r\n      width: 520,\r\n      height: 520,\r\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"attributes\" }]\r\n    });\r\n  }\r\n\r\n  /** @override */\r\n  get template() {\r\n    const path = \"systems/BattleScarredVTT/templates/item\";\r\n\r\n    return `${path}/item-weapon-sheet.hbs`;\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  async getData() {\r\n    // Retrieve base data structure.\r\n    const context = super.getData();\r\n\r\n    // Use a safe clone of the item data for further operations.\r\n    context.system.hitStat = game.i18n.localize(CONFIG.BATTLESCARREDVTT.abilities.names[context.system.hitStat]);\r\n    context.system.weaponType = capitalCase(context.system.weaponType);\r\n    context.system.equipModes = context.system.equipModes.map(v => ({\r\n      label: capitalCase(v),\r\n      equipped: false,\r\n    }));\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n  /** @override */\r\n  activateListeners(html) {\r\n    // Is this even needed?\r\n    super.activateListeners(html);\r\n  }\r\n\r\n  _onRoll(event) {\r\n    event.preventDefault();\r\n\r\n    const item = this?.item;\r\n\r\n    // Handle item rolls.\r\n    if (item) return item.roll();\r\n  }\r\n}\r\n","/**\r\n * Define a set of template paths to pre-load\r\n * Pre-loaded templates are compiled and cached for fast access when rendering\r\n * @return {Promise}\r\n */\r\n export const preloadHandlebarsTemplates = async function() {\r\n  return loadTemplates([\r\n\r\n    // Actor partials.\r\n    \"systems/BattleScarredVTT/templates/actor/parts/actor-features.hbs\",\r\n    \"systems/BattleScarredVTT/templates/actor/parts/actor-items.hbs\",\r\n    \"systems/BattleScarredVTT/templates/actor/parts/actor-spells.hbs\",\r\n    \"systems/BattleScarredVTT/templates/actor/parts/actor-effects.hbs\",\r\n    \"systems/BattleScarredVTT/templates/actor/parts/ability.hbs\",\r\n    \"systems/BattleScarredVTT/templates/actor/parts/abilitySum.hbs\",\r\n    \"systems/BattleScarredVTT/templates/actor/parts/character-header.hbs\",\r\n    \"systems/BattleScarredVTT/templates/actor/parts/character-resources.hbs\",\r\n    \"systems/BattleScarredVTT/templates/actor/parts/character-status.hbs\",\r\n    \"systems/BattleScarredVTT/templates/actor/parts/resource-container.hbs\",\r\n  ]);\r\n};\r\n","export const BATTLESCARREDVTT = {};\n\n// Define constants here, such as:\nBATTLESCARREDVTT.foobar = {\n  'bas': 'BATTLESCARREDVTT.bas',\n  'bar': 'BATTLESCARREDVTT.bar'\n};\n\n/**\n * The set of Ability Scores used within the sytem.\n * @type {Object}\n */\n BATTLESCARREDVTT.abilities = {\n  names : {\n    \"int\": \"BATTLESCARREDVTT.AbilityInt\",\n    \"res\": \"BATTLESCARREDVTT.AbilityRes\",\n    \"emp\": \"BATTLESCARREDVTT.AbilityEmp\",\n    \"aet\": \"BATTLESCARREDVTT.AbilityAet\",\n    \"str\": \"BATTLESCARREDVTT.AbilityStr\",\n    \"end\": \"BATTLESCARREDVTT.AbilityEnd\",\n    \"agi\": \"BATTLESCARREDVTT.AbilityAgi\",\n    \"alt\": \"BATTLESCARREDVTT.AbilityAlt\",\n    \"mel\": \"BATTLESCARREDVTT.AbilityMel\",\n    \"acc\": \"BATTLESCARREDVTT.AbilityAcc\",\n  },\n  Abbreviations: {\n    \"int\": \"BATTLESCARREDVTT.AbilityIntAbbr\",\n    \"res\": \"BATTLESCARREDVTT.AbilityResAbbr\",\n    \"emp\": \"BATTLESCARREDVTT.AbilityEmpAbbr\",\n    \"aet\": \"BATTLESCARREDVTT.AbilityAetAbbr\",\n    \"str\": \"BATTLESCARREDVTT.AbilityStrAbbr\",\n    \"end\": \"BATTLESCARREDVTT.AbilityEndAbbr\",\n    \"agi\": \"BATTLESCARREDVTT.AbilityAgiAbbr\",\n    \"alt\": \"BATTLESCARREDVTT.AbilityAltAbbr\",\n    \"mel\": \"BATTLESCARREDVTT.AbilityMelAbbr\",\n    \"acc\": \"BATTLESCARREDVTT.AbilityAccAbbr\",\n  }\n};\n\nBATTLESCARREDVTT.equipModes = {\n  'oneHand': 'BATTLESCARREDVTT.EquipMode.OneHand',\n  'twoHand': 'BATTLESCARREDVTT.EquipMode.TwoHand',\n  'offHand': 'BATTLESCARREDVTT.EquipMode.OffHand',\n}\n","\r\nexport const helpers = {\r\n  'concat':  function() {\r\n    var outStr = '';\r\n    for (var arg in arguments) {\r\n      if (typeof arguments[arg] != 'object') {\r\n        outStr += arguments[arg];\r\n      }\r\n    }\r\n    return outStr;\r\n  },\r\n  'toLowerCase' : (str) => str.toLowerCase(),\r\n  'switchAbilityLabelClass': (type, ...params) => {\r\n    return new Handlebars.SafeString(`${type}Label ${params.slice(0, -1).join(' ')}`);\r\n  },\r\n  \"json\": (data) => {\r\n    return Handlebars.SafeString(JSON.stringify(data));\r\n  },\r\n  \"isDefined\": (data) => data !== undefined,\r\n  \"concatenate\": (...params) => new Handlebars.SafeString(params.join(' '))\r\n}\r\n","export class CharacterData extends foundry.abstract.DataModel {\r\n  static defineSchema() {\r\n    const fields = foundry.data.fields;\r\n    return {\r\n      biography: new fields.HTMLField(),\r\n      health: new fields.SchemaField({\r\n        value: new fields.NumberField({\r\n          required: true,\r\n          initial: 10,\r\n          integer: true\r\n        }),\r\n        min: new fields.NumberField({\r\n          required: true,\r\n          initial: 0,\r\n          integer: true\r\n        }),\r\n        max: new fields.NumberField({\r\n          required: true,\r\n          initial: 10,\r\n          integer: true\r\n        })\r\n      }),\r\n      proficiencies: new fields.SchemaField({\r\n        weapons: new fields.ArrayField(new fields.StringField()),\r\n        skills: new fields.ArrayField(new fields.StringField())\r\n      })\r\n    };\r\n  }\r\n}","// Import document classes.\nimport { BattleScarredActor } from \"./documents/actor.mjs\";\nimport { BattleScarredItem } from \"./documents/item.mjs\";\nimport { BattleScarredWeapon } from \"./documents/items/weapon.mjs\";\n// Import sheet classes.\nimport { BattleScarredActorSheet } from \"./sheets/actor-sheet.mjs\";\nimport { BattleScarredItemSheet } from \"./sheets/item-sheet.mjs\";\nimport { BattleScarredWeaponSheet } from \"./sheets/items/weapon-sheet.mjs\";\n// Import helper/utility classes and constants.\nimport { preloadHandlebarsTemplates } from \"./helpers/templates.mjs\";\nimport { BATTLESCARREDVTT } from \"./helpers/config.mjs\";\nimport { helpers } from \"./handlebars.mjs\";\n\nimport { CharacterData } from \"./dataModels/character.mjs\";\n\n/* -------------------------------------------- */\n/*  Init Hook                                   */\n/* -------------------------------------------- */\nHooks.once('init', async function() {\n  // Add utility classes to the global game object so that they're more easily\n  // accessible in global contexts.\n  game.BattleScarredVTT = {\n    BattleScarredActor,\n    BattleScarredWeapon,\n    BattleScarredItem,\n    rollItemMacro,\n  };\n\n  // Add custom constants for configuration.\n  CONFIG.BATTLESCARREDVTT = BATTLESCARREDVTT;\n\n  /**\n   * Set an initiative formula for the system\n   * @type {String}\n   */\n  CONFIG.Combat.initiative = {\n    formula: \"1d20 + @abilities.dex.mod\",\n    decimals: 2\n  };\n\n  // Define custom Document classes\n  CONFIG.Actor.documentClass = BattleScarredActor;\n  CONFIG.Weapon.documentClass = BattleScarredWeapon;\n  CONFIG.Item.documentClass = BattleScarredItem;\n  CONFIG.Actor.systemDataModels.characterAgain = CharacterData;\n\n  // Register sheet application classes\n  // Actors.unregisterSheet(\"core\", ActorSheet);\n  Actors.registerSheet(\"BattleScarredVTT\", BattleScarredActorSheet, {\n    types: [\"character\", \"npc\"],\n    makeDefault: true,\n  });\n  Items.unregisterSheet(\"core\", ItemSheet);\n  Items.registerSheet(\"BattleScarredVTT\", BattleScarredItemSheet, { makeDefault: true });\n  Items.registerSheet(\"BattleScarredVTT\", BattleScarredWeaponSheet, { \n    types: [\"weapon\"],\n    makeDefault: true,\n    label: \"WeaponSheetDefault\"\n  });\n\n  // Preload Handlebars templates.\n  return preloadHandlebarsTemplates();\n});\n\n/* -------------------------------------------- */\n/*  Handlebars Helpers                          */\n/* -------------------------------------------- */\n\n// If you need to add Handlebars helpers, here are a few useful examples:\nObject.entries(helpers).forEach(([key, value]) => {\n  Handlebars.registerHelper(key, value);\n})\n\n/* -------------------------------------------- */\n/*  Ready Hook                                  */\n/* -------------------------------------------- */\n\nHooks.once(\"ready\", async function() {\n  // Wait to register hotbar drop hook on ready so that modules could register earlier if they want to\n  Hooks.on(\"hotbarDrop\", (bar, data, slot) => createItemMacro(data, slot));\n});\n\n/* -------------------------------------------- */\n/*  Hotbar Macros                               */\n/* -------------------------------------------- */\n\n/**\n * Create a Macro from an Item drop.\n * Get an existing item macro if one exists, otherwise create a new one.\n * @param {Object} data     The dropped data\n * @param {number} slot     The hotbar slot to use\n * @returns {Promise}\n */\nasync function createItemMacro(data, slot) {\n  if (data.type !== \"Item\") return;\n  if (!(\"data\" in data)) return ui.notifications.warn(\"You can only create macro buttons for owned Items\");\n  const item = data.data;\n\n  // Create the macro command\n  const command = `game.BattleScarredVTT.rollItemMacro(\"${item.name}\");`;\n  let macro = game.macros.find(m => (m.name === item.name) && (m.command === command));\n  if (!macro) {\n    macro = await Macro.create({\n      name: item.name,\n      type: \"script\",\n      img: item.img,\n      command: command,\n      flags: { \"BattleScarredVTT.itemMacro\": true }\n    });\n  }\n  game.user.assignHotbarMacro(macro, slot);\n  return false;\n}\n\n/**\n * Create a Macro from an Item drop.\n * Get an existing item macro if one exists, otherwise create a new one.\n * @param {string} itemName\n * @return {Promise}\n */\nfunction rollItemMacro(itemName) {\n  const speaker = ChatMessage.getSpeaker();\n  let actor;\n  if (speaker.token) actor = game.actors.tokens[speaker.token];\n  if (!actor) actor = game.actors.get(speaker.actor);\n  const item = actor ? actor.items.find(i => i.name === itemName) : null;\n  if (!item) return ui.notifications.warn(`Your controlled Actor does not have an item named ${itemName}`);\n\n  // Trigger the item roll\n  return item.roll();\n}"],"names":["BattleScarredActor","actorData","data","key","ability","str","end","k","v","carried","maxCarry","percentage","strength","basic","roundToNearestXWithOffset","number","increment","offset","BattleScarredItem","item","speaker","rollMode","defaultLabel","rollData","rolls","BattleScarredWeapon","rollCoontext","roll","label","_a","_b","dice","bonus","equippedMode","damageStat","multiplier","onManageActiveEffect","event","owner","a","li","effect","prepareActiveEffectCategories","effects","categories","e","__assign","t","s","i","n","p","lowerCase","DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","noCase","input","options","splitRegexp","stripRegexp","_c","transform","_d","delimiter","result","replace","start","re","value","pascalCaseTransform","index","firstChar","lowerChars","pascalCase","upperCaseFirst","capitalCaseTransform","capitalCase","formatResourceForSheet","resourceName","system","fetched","BattleScarredActorSheet","context","short","resource","arr","gear","features","spells","html","ev","handler","header","type","itemData","element","dataset","itemId","BattleScarredItemSheet","actor","BattleScarredWeaponSheet","preloadHandlebarsTemplates","BATTLESCARREDVTT","helpers","outStr","arg","params","CharacterData","fields","rollItemMacro","bar","slot","createItemMacro","command","macro","m","itemName"],"mappings":"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","x_google_ignoreList":[4,5,6,7,8,9]}